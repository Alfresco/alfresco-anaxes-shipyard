apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-service
  labels:
    app: {{ template "fullname" . }}-service
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-service
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.registryPullSecrets }}
      containers:
        - name: {{ .Chart.Name }}-service
          image: "{{ .Values.serviceImage.repository }}:{{ .Values.serviceImage.tag }}"
          imagePullPolicy: {{ .Values.serviceImage.pullPolicy }}
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql/postgres
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
          ports:
            - containerPort: {{ .Values.serviceImage.internalPort }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /health
              port: {{ .Values.serviceImage.internalPort }}
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /health
              port: {{ .Values.serviceImage.internalPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-ui
  labels:
    app: {{ template "fullname" . }}-ui
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-ui
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.registryPullSecrets }}
      containers:
        - name: {{ .Chart.Name }}-ui
          image: "{{ .Values.uiImage.repository }}:{{ .Values.uiImage.tag }}"
          imagePullPolicy: {{ .Values.uiImage.pullPolicy }}
          env:
            - name: SERVICE_HOST
              value: {{ template "fullname" . }}-service
            - name: SERVICE_PORT
              value: "{{ .Values.serviceImage.internalPort }}"
          ports:
            - containerPort: {{ .Values.uiImage.internalPort }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: {{ .Values.uiImage.internalPort }}
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: {{ .Values.uiImage.internalPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
